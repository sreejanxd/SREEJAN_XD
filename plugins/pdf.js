const config = require('../config')
const {cmd , commands} = require('../command')
cmd({pattern:"pdf ?(.*)",fromMe:isPrivate,desc:"Converts image to PDF or text to PDF",type:"tool"},(async(e,t)=>{if(t&&!t.startsWith("send")){let i=t,a="./text.pdf",n=new PDFDocument;return n.pipe(fs.createWriteStream(a)),n.font("Helvetica",12).text(i,50,50,{align:"justify"}),n.end(),void setTimeout((async()=>{await e.reply({url:"./text.pdf"},{mimetype:"application/pdf",fileName:"text.pdf"},"document"),fs.unlinkSync(a)}),4e3)}let i,a="./pdf";if(fs.existsSync(a)||fs.mkdirSync(a),"send"===t)i=!0;else{if(i=!1,!e.reply_message.image)return await e.reply("*Reply to an image or give text*\n_Example: `.pdf hello world`_\nTo get pdf of image use `.pdf send`");{let t=await e.reply_message.downloadAndSaveMedia();if(!fs.existsSync(t))return await e.reply("Error: Downloaded file does not exist.");let i,n=0;do{i=path.join(a,`ironman${0===n?"":n}.jpg`),n++}while(fs.existsSync(i));fs.renameSync(t,i),await e.send(`${fs.readdirSync(a).length} images saved successfully_`)}}if(i){let t=new PDFDocument({autoFirstPage:!1}),i=fs.createWriteStream("./image.pdf");t.pipe(i);let n=fs.readdirSync(a).filter((e=>".jpg"===path.extname(e).toLowerCase()));if(0===n.length)return await e.reply("_No images found to convert to PDF._");n.forEach((e=>{let i=path.join(a,e),n=t.openImage(i);t.addPage({size:[n.width,n.height],margin:0}),t.image(i,0,0,{width:n.width,height:n.height})})),t.end(),setTimeout((async()=>{await e.reply({url:"./image.pdf"},{mimetype:"application/pdf",fileName:"image.pdf"},"document"),fs.rmSync(a,{recursive:!0,force:!0}),setTimeout((()=>fs.unlinkSync("./image.pdf")),4e3)}),4e3)}}));

